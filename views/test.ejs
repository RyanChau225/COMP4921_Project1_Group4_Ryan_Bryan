<!-- <!DOCTYPE html>
<html>
	<head>
		<meta charset="utf-8"/>
		<link rel="stylesheet" href="bulma.min.css">
		<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
		<script src="https://cdn.jsdelivr.net/npm/cloudinary-jquery@2.11.3/cloudinary-jquery.min.js"></script>
		<script defer src="https://use.fontawesome.com/releases/v5.3.1/js/all.js"> </script>
	</head>
	<body>
		<script type="text/javascript"> 
			$.cloudinary.config({ cloud_name: '<%= process.env.CLOUDINARY_CLOUD_NAME %>', secure: true});
		</script>
	
		<section class="section">
			<div class="maincolumns columns is-desktop is-vcentered">
				<div class="column is-10 is-offset-1 notification is-info is-light box container">
					<div class="title">
						Pets
					</div>
					<% if (locals.allPets) { %>
						<div class="table-container">
						<table class="table is-bordered is-hoverable is-striped is-narrow">
							<thead>
							<tr>
								<th> Pet Name </th>
								<th> &nbsp; </th>
								<th> &nbsp; </th>
							</tr>
							</thead>
							<% let i=0; %>
							<% for(i=0; i < allPets.length; i++) { %>
							<tr>
								<td><%= allPets[i].name %></td>
								<% if (allPets[i].image_id) { %>
									<td>
										<script type="text/javascript">document.write($.cloudinary.imageTag('<%- allPets[i].image_id %>', {height: 100, width: 100, crop: "fit"}).toHtml());</script>
									<% } else { %>
									<td colspan="2">
										<form action="setPetPic" method="post" enctype="multipart/form-data">
											<div class="field is-horizontal">
												<input type="hidden" name="pet_id" value="<%= allPets[i].pet_id %>"/>
												<input type="hidden" name="user_id" value="<%= allPets[i].user_id %>"/>
												<div id="picture-upload" class="file is-info has-name is-small is-right">
												  <label class="file-label">
													<input class="file-input" type="file" name="image"/>
													<span class="file-cta">
														<span class="file-icon"><i class="fas fa-upload"></i></span>
														<span class="file-label">Choose a fileâ€¦</span>
													</span>
													<span class="file-name">No File</span>
												  </label>
												</div>
												&nbsp;
												<div class="field">
													<button class="button is-link is-small">
														<span>Upload</span>
														<span class="icon is-small">
															<i class="fas fa-image"></i>
														</span>
													</button>
												</div>
											</div>
										</form>
									<% } %>
								</td>
								<% if (allPets[i].image_id) { %>
								<td><a href="/deletePetImage?id=<%= allPets[i].pet_id %>&user=<%= allPets[i].user_id %>">
									<span class="icon is-small">
										<i class="fas fa-eraser"></i>
									</span></a>
								</td>
								<% } %>
							</tr>
							<% } %>
							<tfoot>
								<tr> <td colspan="3">
								There are <%= i %> pets.
								</td> </tr>
							</tfoot>
						</table>
						</div>
					<% } %>


					<form action="addPet" method="post">
						<input type="hidden" name="user_id" value="<%= user_id %>"/>
						<div class="field is-horizontal">
						  <div class="field-label is-normal">
							<label class="label">Add New Pet</label>
						  </div>
						  <div class="field-body">
							<div class="field">
							  <p class="control is-expanded">
								<input name="pet_name" class="input" type="text" placeholder="Pet Name">
							  </p>
							</div>
							<div class="field">
								<p class="control is-expanded">
								  <input name="pet_type" class="input" type="text" placeholder="Pet Type">
								</p>
							</div>
							<div class="field">
								<button class="button is-link">
									<span>Add</span>
									<span class="icon is-small">
										<i class="fas fa-paw"></i>
									</span>
								</button>
							</div>
						  </div>
						</div>
					</form>

				</div>
			</div>
		</section>
		<script>
		  const fileInput = document.querySelector('#picture-upload input[type=file]');
		  fileInput.onchange = () => {
			if (fileInput.files.length > 0) {
			  const fileName = document.querySelector('#picture-upload .file-name');
			  fileName.textContent = fileInput.files[0].name;
			}
		  }
		</script>
	</body>
</html> -->

<!-- 
<!DOCTYPE html>
<html>
	<head>
		<meta charset="utf-8"/>
		<link rel="stylesheet" href="bulma.min.css">
		<script defer src="https://use.fontawesome.com/releases/v5.3.1/js/all.js"> </script>
	</head>
	<body>
		<section class="section">
			<div class="maincolumns columns is-desktop is-vcentered">
				<div class="column is-10 is-offset-1 notification is-info is-light box container">
					<div class="title">
						Users
					</div>
					<% if (locals.allUsers) { %>
						<div class="table-container">
						<table class="table is-bordered is-hoverable is-striped is-narrow">
							<thead>
							<tr>
								<th> First Name </th>
								<th> Last Name </th>
								<th> Email </th>
								<th> &nbsp; </th>
								<th> &nbsp; </th>
							</tr>
							</thead>
							<% let i=0; %>
							<% for(i=0; i < allUsers.length; i++) { %>
							<tr>
								<td><%= allUsers[i].first_name %></td>
								<td><%= allUsers[i].last_name %></td>
								<td><%= allUsers[i].email %></td>
								<td><a href="/deleteUser?id=<%= allUsers[i].user_id %>">
									<span class="icon is-small">
										<i class="fas fa-user-times"></i>
									</span></a>
								</td>
								<td><a href="/showPets?id=<%= allUsers[i].user_id %>">
									<span class="icon is-small">
										<i class="fas fa-paw"></i>
									</span></a>
								</td>
							</tr>
							<% } %>
							<tfoot>
								<tr> <td colspan="5">
								There are <%= i %> users.
								</td> </tr>
							</tfoot>
						</table>
						</div>
					<% } %>

					<form action="addUser" method="post">
						<div class="field is-horizontal">
						  <div class="field-label is-normal">
							<label class="label">Add New User</label>
						  </div>
						  <div class="field-body">
							<div class="field">
							  <p class="control is-expanded">
								<input name="first_name" class="input" type="text" placeholder="First Name">
							  </p>
							</div>
							<div class="field">
							  <p class="control is-expanded">
								<input name="last_name" class="input" type="text" placeholder="Last Name">
							  </p>
							</div>
							<div class="field">
							  <p class="control is-expanded">
								<input name="email" class="input" type="email" placeholder="Email">
							  </p>
							</div>
							<div class="field">
							  <p class="control is-expanded">
								<input name="password" class="input" type="password" placeholder="Password">
							  </p>
							</div>
							<div class="field">
								<button class="button is-link">
									<span>Add</span>
									<span class="icon is-small">
										<i class="fas fa-user-plus"></i>
									</span>
								</button>
							</div>
						  </div>
						</div>
					</form>
				</div>
			</div>
		</section>
	</body>
</html> -->



<!-- // // Adds a users into the databse. only for admin.
// app.post('/addUser', (req, res) => {
//     let isUsernameInDbVariable;
//     // I need to do this callback fuction thing only in server.js for some reason. I googled it and I don't understand why.
//     isUsernameInDb(req.body.username, (response) => {
//         isUsernameInDbVariable = response;
//     })

//     const plaintextPassword = req.body.password;
//     const saltRounds = 10;

//     bcrypt.hash(plaintextPassword, saltRounds, (err, hash) => {
//         if (!isUsernameInDbVariable) {
//             userModel.create({
//                 username: req.body.username,
//                 password: hash,
//                 name: req.body.name,
//                 admin: req.body.admin
//             }, (err, data) => {
//                 if (err) {
//                     console.log(err);
//                 }

//                 res.send(data.name);
//             })
//         } else {
//             res.send(true);
//         }
//     })
// })

// router.post('/checkUserCredentials', (req, res) => {
//     let usernameToCheck = req.body.username;
//     let passwordToCheck = req.body.password; // This password is in plaintext.
//     let expectedHashedPassword = "";

//     userModel.find({
//         username: usernameToCheck
//     }, (err, data) => {
//         if (err) {
//             console.log(err);
//         } else {
//             if (data.length > 0) {
//                 expectedHashedPassword = data[0].password;
//             }


//             bcrypt.compare(passwordToCheck, expectedHashedPassword, (err, result) => {
//                 if (err) {
//                     console.log(err);
//                 } else if (result) {
//                     req.session.authenticated = true;
//                     req.session.username = data[0].username;
//                     req.session.uid = data[0]._id;
    
//                     res.send(true);
//                 } else {
//                     res.send(false);
//                 }
//             })
//         }
//     })
// })





// // Check if user is logged in.
// router.get('/isUserLoggedIn', (req, res) => {
//     if (req.session.authenticated) {
//         res.send(true);
//     } else {
//         res.send(false);
//     }
// })

// // Ends the user session.
// router.get('/logout', (req, res) => {
//     req.session.authenticated = false;
//     req.session.username = undefined;
//     req.session.uid = undefined;

//     res.render('login.ejs');
// }) -->
